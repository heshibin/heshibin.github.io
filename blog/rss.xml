<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Ma chu-码站 Blog</title>
        <link>http://machu.top/blog</link>
        <description>Ma chu-码站 Blog</description>
        <lastBuildDate>Thu, 23 Mar 2023 12:36:32 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[vscode下载速度过慢解决办法]]></title>
            <link>http://machu.top/blog/vscode下载速度过慢解决办法</link>
            <guid>/vscode下载速度过慢解决办法</guid>
            <pubDate>Thu, 23 Mar 2023 12:36:32 GMT</pubDate>
            <description><![CDATA[下载地址的域名改成 vscode.cdn.azure.cn]]></description>
            <content:encoded><![CDATA[<p>下载地址的域名改成 <code>vscode.cdn.azure.cn</code></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[字符串匹配问题-KMP算法]]></title>
            <link>http://machu.top/blog/字符串匹配问题-KMP算法</link>
            <guid>/字符串匹配问题-KMP算法</guid>
            <pubDate>Thu, 23 Mar 2023 12:36:32 GMT</pubDate>
            <description><![CDATA[KMP算法]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="kmp算法">KMP算法<a class="hash-link" href="#kmp算法" title="Direct link to heading">​</a></h2><p>KMP算法是一种高效的字符串匹配算法，在传统暴力遍历匹配的基础上做了一定的优化。</p><p>首先，KMP算法的实现也是使用了回退思想，不过与暴力遍历不同，KMP的回退是让子串进行匹配，而不是主串。</p><p>主要思想是：<strong>当出现字符串不匹配，可以知道一部分之前已经匹配的文本内容，利用这些信息避免从头再去匹配</strong>。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[springboot跨域设置]]></title>
            <link>http://machu.top/blog/spring-boot-cors-config</link>
            <guid>/spring-boot-cors-config</guid>
            <pubDate>Mon, 20 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[springboot跨域设置代码，CorsConfig]]></description>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@Configuration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class CorsConfig {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Value("${configure.cors.enable:true}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private Boolean corsIsEnable;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private CorsConfiguration buildConfig() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        CorsConfiguration corsConfiguration = new CorsConfiguration();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //  你需要跨域的地址  注意这里的 127.0.0.1 != localhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // * 表示对所有的地址都可以访问</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //corsConfiguration.addAllowedOrigin("*");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        // 升级boot版本后需要使用addAllowedOriginPattern</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        corsConfiguration.addAllowedOriginPattern("*");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //  跨域的请求头</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        corsConfiguration.addAllowedHeader("*"); // 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //  跨域的请求方法</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        corsConfiguration.addAllowedMethod("*"); // 3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //加上了这一句，大致意思是可以携带 cookie</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //最终的结果是可以 在跨域请求的时候获取同一个 session</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        corsConfiguration.setAllowCredentials(true);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return corsConfiguration;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Bean</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public CorsFilter corsFilter() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        //配置 可以访问的地址</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if(corsIsEnable){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            source.registerCorsConfiguration("/**", buildConfig()); // 4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new CorsFilter(source);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>java</category>
            <category>springboot</category>
            <category>跨域</category>
        </item>
        <item>
            <title><![CDATA[java实现list的翻转]]></title>
            <link>http://machu.top/blog/reserve-list</link>
            <guid>/reserve-list</guid>
            <pubDate>Sat, 18 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Java如何实现List的反转，不保留原List进行翻转]]></description>
            <content:encoded><![CDATA[<h4 class="anchor anchorWithStickyNavbar_LWe7" id="不保留原list进行翻转">不保留原List进行翻转<a class="hash-link" href="#不保留原list进行翻转" title="Direct link to heading">​</a></h4><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">List&lt;Integer&gt; list = new ArrayList&lt;&gt;();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">list.add(1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">list.add(2);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">list.add(3);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println("翻转前:" + list);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Collections.reverse(list);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">System.out.println("反转后:" + list);</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>java</category>
            <category>list</category>
        </item>
        <item>
            <title><![CDATA[webmagic爬取https页面报错]]></title>
            <link>http://machu.top/blog/webmagic-https-error</link>
            <guid>/webmagic-https-error</guid>
            <pubDate>Mon, 13 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[No appropriate protocol (protocol is disabled or cipher suites are inappropriate)，原因是：jdk1.8高版本对`ssl`做了限制。]]></description>
            <content:encoded><![CDATA[<p>在使用webmagic爬取页面时，在download的时候，提示<code>No appropriate protocol (protocol is disabled or cipher suites are inappropriate)</code>。  </p><p>原因是：jdk1.8高版本对<code>ssl</code>做了限制。     </p><p>解决办法：  </p><p>在<code>C:\Program Files\Java\jdk1.8.0_291\jre\lib\security</code>目录下修改<code>java.security</code>文件。    </p><p><img loading="lazy" src="https://user-images.githubusercontent.com/49633468/224741423-69e392a5-190e-49d4-bd23-2b9e79e411e1.png" alt="image" class="img_ev3q"></p><p>找到<code>jdk.tls.disabledAlgorithms</code>，去除 <code>SSLv3</code> 即可（代表允许https）。</p>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>java</category>
            <category>webmagic</category>
        </item>
        <item>
            <title><![CDATA[Github自动化部署至阿里云服务器]]></title>
            <link>http://machu.top/blog/Github自动化部署至阿里云服务器</link>
            <guid>/Github自动化部署至阿里云服务器</guid>
            <pubDate>Mon, 27 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Github自动化部署至阿里云服务器，前期通过github-page构建发布站点，但是在github服务器上，在不科学上网的前提下访问很慢。 因此准备将构建好的文件再上传到阿里云服务器，再通过nginx访问]]></description>
            <content:encoded><![CDATA[<p>前期通过github-page构建发布站点，但是在github服务器上，在不科学上网的前提下访问很慢。<br>
<!-- -->因此准备将构建好的文件再上传到阿里云服务器，再通过nginx访问。  </p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="准备">准备<a class="hash-link" href="#准备" title="Direct link to heading">​</a></h4><p>正式开始之前，你需要掌握 GitHub Action 的基础语法：</p><ul><li>name: 工作流的名称。</li><li>on: 指定次工作流的触发器。push 表示只要有人将更改推送到仓库就会触发工作流运行。（点击这里了解如何指定特定分支，路径或标签）</li><li>jobs: 将工作流运行的所有作业组合到一起。</li><li>build-and-deploy: 定义的作业的名称。</li><li>runs-on: 将作业配置为在最新版本的 Ubuntu Linux 上运行。这意味着作业将在 GitHub 托管的新虚拟机上执行。有关使用其他运行器的语法示例，<a href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idruns-on" target="_blank" rel="noopener noreferrer">请参阅 GitHub 操作的工作流语法</a>。</li><li>steps: 将作业中运行的所有步骤组合在一起。嵌套在此部分下的每个项都是一个单独的操作或 shell 脚本。</li><li>uses: 指定需要运行的 action。</li><li>env: 指定运行 action 时需要用到的环境变量的值</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="步骤">步骤<a class="hash-link" href="#步骤" title="Direct link to heading">​</a></h4><ol><li>在服务器上使用<code>ssh-keygen -m PEM -t rsa -b 4096</code>生成公私钥。 </li><li>将github中添加私钥。
<img loading="lazy" src="https://user-images.githubusercontent.com/49633468/221595957-20e81775-c1d6-4434-8aa9-b84dc8eb99e6.png" alt="image" class="img_ev3q"></li><li>在nginx中也要开启对应ssh私钥登录。</li></ol><h4 class="anchor anchorWithStickyNavbar_LWe7" id="完整的文件">完整的文件<a class="hash-link" href="#完整的文件" title="Direct link to heading">​</a></h4><div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deploy Github pages</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">push</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">branches</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">jobs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">build-and-deploy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">runs-on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">steps</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Checkout</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> actions/checkout@v2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> npm install </span><span class="token important">&amp;&amp;</span><span class="token plain"> npm run build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Build and Deploy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> peaceiris/actions</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">gh</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">pages@v3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">#uses: JamesIves/github-pages-deploy-action@master</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">with</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">github_token</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> secrets.GITHUB_TOKEN </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">publish_branch</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> master</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">publish_dir</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># 部署到阿里云服务器</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> 上传到阿里云</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">uses</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> easingthemes/ssh</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">deploy@main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 本地.ssh文件下的私钥id_rsa，存在secrets的TOKEN中</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">SSH_PRIVATE_KEY</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> secrets.TOKEN </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 复制操作的参数。"-avzr --delete"象征部署时清空服务器目标目录下的文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">ARGS</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"-rlgoDzvc -i --delete"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 源目录，绝对于仓库内容根目录的门路</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">SOURCE</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"build"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 近程服务器地址</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">REMOTE_HOST</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> HOST</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 近程服务器用户名</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">REMOTE_USER</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"root"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># 目标目录（近程服务器门路）</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">TARGET</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/home/www"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>github</category>
            <category>workflows</category>
            <category>2023-02</category>
        </item>
        <item>
            <title><![CDATA[Git默认不区分大小写]]></title>
            <link>http://machu.top/blog/Git默认不区分大小写</link>
            <guid>/Git默认不区分大小写</guid>
            <pubDate>Mon, 20 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[通过代码规范，修改了包名为全小写（修改了文件夹目录），但发现push后，git服务器的文件夹目录还是为大写]]></description>
            <content:encoded><![CDATA[<h4 class="anchor anchorWithStickyNavbar_LWe7" id="背景">背景<a class="hash-link" href="#背景" title="Direct link to heading">​</a></h4><p>通过代码规范，修改了包名为全小写（修改了文件夹目录），但发现push后，git服务器的文件夹目录还是为大写  </p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="解决方法">解决方法<a class="hash-link" href="#解决方法" title="Direct link to heading">​</a></h4><p>git默认是不区分大小写的，意思是你修改一个文件名/文件夹的时候，<code>git status</code> 是不会提示你有修改的   </p><p>可以通过 <code>git config --get core.ignorecase</code> 查看默认配置  </p><p>通过 <code>git config core.ignorecase false</code> 设置为区分大小写  </p><p>然后 <code>git status</code> 就可以看到变动  </p><p>然后push到远程服务器</p>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>Git</category>
        </item>
        <item>
            <title><![CDATA[GitHub查看访问量]]></title>
            <link>http://machu.top/blog/GitHub查看访问量</link>
            <guid>/GitHub查看访问量</guid>
            <pubDate>Wed, 01 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[点开自己的项目 Insights->Traffic]]></description>
            <content:encoded><![CDATA[<p>点开自己的项目 Insights-&gt;Traffic。</p><img loading="lazy" width="1631" alt="image" src="https://user-images.githubusercontent.com/49633468/215978458-ed0eb06c-cbc9-45ce-90f5-f0e411ab605f.png" class="img_ev3q">]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>github</category>
        </item>
        <item>
            <title><![CDATA[mysql远程连接问题 is not allowed to connect to this MySQL server]]></title>
            <link>http://machu.top/blog/mysql远程连接问题</link>
            <guid>/mysql远程连接问题</guid>
            <pubDate>Sun, 29 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[message from server "Host '192.168.7.233' is not allowed to connect to this MySQL server]]></description>
            <content:encoded><![CDATA[<p>message from server: "Host '192.168.7.233' is not allowed to connect to this MySQL server<br>
<!-- -->远程连接数据库时报错  </p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="原因">原因<a class="hash-link" href="#原因" title="Direct link to heading">​</a></h4><p>mysql数据库只允许自身所在的本机器连接，不允许远程连接。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="解决">解决<a class="hash-link" href="#解决" title="Direct link to heading">​</a></h4><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mysql -u root -p</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">use mysql</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">host</span><span class="token plain"> from user where user </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'root'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">update user </span><span class="token builtin class-name">set</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">host</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'%'</span><span class="token plain"> where user </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'root'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">flush privileges</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><img loading="lazy" width="752" alt="image" src="https://user-images.githubusercontent.com/49633468/215310377-78b16008-e0f4-4848-a175-4e206566441a.png" class="img_ev3q">]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>mysql</category>
        </item>
        <item>
            <title><![CDATA[github-page dns解析失败]]></title>
            <link>http://machu.top/blog/github-page dns解析失败</link>
            <guid>/github-page dns解析失败</guid>
            <pubDate>Fri, 27 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[给解析添加A类型]]></description>
            <content:encoded><![CDATA[<p>给解析添加A类型，以下地址任选一</p><p>185.199.108.153<br>
<!-- -->185.199.109.153<br>
<!-- -->185.199.110.153<br>
<!-- -->185.199.111.153  </p><p><img loading="lazy" src="https://user-images.githubusercontent.com/49633468/215111496-14560083-35f7-4673-9fb8-584b2594cda7.png" alt="image" class="img_ev3q"></p>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
        </item>
        <item>
            <title><![CDATA[Integer比较相等问题]]></title>
            <link>http://machu.top/blog/Integer比较相等</link>
            <guid>/Integer比较相等</guid>
            <pubDate>Thu, 12 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Integer比较相等问题]]></description>
            <content:encoded><![CDATA[<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Integer a = 127;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Integer b = 127;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(a == b); // true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(a.equals(b)); // true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Integer c = 128;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Integer d = 128;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(c == d); // false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println(c.equals(d)); // true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>Integer</code>在判断相等时，当值定义在<code>-128~127</code>之间时，使用<code>==</code>或者<code>equal()</code>比较是一样的。但当值定义在这个范围时，<code>equal()</code>比较的是值，<code>==</code>比较的是<code>内存地址</code>。</p><p>-128到127的范围内，Integer不对创建对象，而是直接取系统缓存中的变量数据。</p><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * Cache to support the object identity semantics of autoboxing for values between</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * -128 and 127 (inclusive) as required by JLS.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * The cache is initialized on first usage.  The size of the cache</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * may be controlled by the {@code -XX:AutoBoxCacheMax=&lt;size&gt;} option.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * During VM initialization, java.lang.Integer.IntegerCache.high property</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * may be set and saved in the private system properties in the</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * sun.misc.VM class.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    private static class IntegerCache {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        static final int low = -128;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        static final int high;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        static final Integer cache[];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        static {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // high value may be configured by property</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            int h = 127;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            String integerCacheHighPropValue =</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                sun.misc.VM.getSavedProperty("java.lang.Integer.IntegerCache.high");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (integerCacheHighPropValue != null) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                try {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    int i = parseInt(integerCacheHighPropValue);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    i = Math.max(i, 127);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // Maximum array size is Integer.MAX_VALUE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    h = Math.min(i, Integer.MAX_VALUE - (-low) -1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                } catch( NumberFormatException nfe) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    // If the property cannot be parsed into an int, ignore it.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            high = h;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            cache = new Integer[(high - low) + 1];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            int j = low;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            for(int k = 0; k &lt; cache.length; k++)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                cache[k] = new Integer(j++);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // range [-128, 127] must be interned (JLS7 5.1.7)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            assert IntegerCache.high &gt;= 127;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        private IntegerCache() {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    /**</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * Returns an {@code Integer} instance representing the specified</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * {@code int} value.  If a new {@code Integer} instance is not</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * required, this method should generally be used in preference to</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * the constructor {@link #Integer(int)}, as this method is likely</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * to yield significantly better space and time performance by</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * caching frequently requested values.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * This method will always cache values in the range -128 to 127,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * inclusive, and may cache other values outside of this range.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @param  i an {@code int} value.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @return an {@code Integer} instance representing {@code i}.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     * @since  1.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static Integer valueOf(int i) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return IntegerCache.cache[i + (-IntegerCache.low)];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return new Integer(i);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>java</category>
        </item>
        <item>
            <title><![CDATA[GET和POST的区别]]></title>
            <link>http://machu.top/blog/GET和POST的区别</link>
            <guid>/GET和POST的区别</guid>
            <pubDate>Tue, 10 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[get请求和post请求本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。]]></description>
            <content:encoded><![CDATA[<p>get请求和post请求本质上就是TCP链接，并无差别。但是由于HTTP的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="get">GET<a class="hash-link" href="#get" title="Direct link to heading">​</a></h3><p>从指定的资源请求数据，用于获取数据，一般用于搜索排序和筛选之类的操作。</p><ol><li>浏览器请求tcp连接（第一次握手）。</li><li>服务器答应进行tcp连接（第二次握手）。</li><li>浏览器确认，并发送get请求头和数据（第三次握手，这个报文比较小，所以http会在此时进行第一次数据发送）。</li><li>服务器返回200 OK响应。</li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="post">post<a class="hash-link" href="#post" title="Direct link to heading">​</a></h3><p>向指定的资源提交要被处理的数据，用于将数据发送给服务器，一般用于修改和写入数据。</p><ol><li>浏览器请求tcp连接（第一次握手）。</li><li>服务器答应进行tcp连接（第二次握手）。</li><li>浏览器确认，并发送post请求头（第三次握手，这个报文比较小，所以http会在此时进行第一次数据发送）。</li><li>服务器返回100 Continue响应。</li><li>浏览器发送数据。</li><li>服务器返回200 OK响应。</li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="区别">区别<a class="hash-link" href="#区别" title="Direct link to heading">​</a></h3><ul><li>安全<ul><li>post请求更安全，不会作为url的一部分，不会被缓存、保存在服务器日志、以及浏览器浏览记录中。</li><li>get请求的是静态资源，则会缓存，如果是数据，则不会缓存。</li></ul></li><li>数据包<ul><li>post请求发送的数据更大。</li><li>get请求有url长度限制，http协议本身不限制，请求长度限制是由浏览器和web服务器决定和设置。</li></ul></li><li>post请求能发送更多的数据类型（get请求只能发送ASCII字符）。</li><li>传参方式不同（get请求参数通过url传递，post请求放在request body中传递）。</li><li>get请求的是静态资源，则会缓存，如果是数据，则不会缓存。</li><li>get请求产生一个TCP数据包；post请求产生两个TCP数据包（get请求，浏览器会把http header和data一并发送出去，服务器响应200返回数据；post请求，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 返回数据）。</li></ul><p>在发送 POST 的时候都没有带 Expect 头，server 也自然不会发 100 continue。</p>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>java</category>
        </item>
        <item>
            <title><![CDATA[Mac安装JD-GUI打不开问题]]></title>
            <link>http://machu.top/blog/Mac安装JD-GUI打不开问题</link>
            <guid>/Mac安装JD-GUI打不开问题</guid>
            <pubDate>Mon, 09 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[下载地址//java-decompiler.github.io/]]></description>
            <content:encoded><![CDATA[<p>下载地址: <a href="http://java-decompiler.github.io/" target="_blank" rel="noopener noreferrer">http://java-decompiler.github.io/</a></p><img loading="lazy" width="440" alt="image" src="https://user-images.githubusercontent.com/49633468/211228055-b0de0093-7f61-44e0-92ab-a5b3517acd11.png" class="img_ev3q"><h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决办法">解决办法<a class="hash-link" href="#解决办法" title="Direct link to heading">​</a></h2><img loading="lazy" width="519" alt="image" src="https://user-images.githubusercontent.com/49633468/211228140-4722afc7-7d63-4746-8150-4f21f191a962.png" class="img_ev3q"><p>在230行处增加<code>JVMVersion="1.8.0_202"</code></p><img loading="lazy" width="810" alt="image" src="https://user-images.githubusercontent.com/49633468/211228085-c3b06594-6e32-4335-91ce-9e1347d4f7d0.png" class="img_ev3q">]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>mac</category>
            <category>jd-gui</category>
        </item>
        <item>
            <title><![CDATA[github-pages如何去掉子域名]]></title>
            <link>http://machu.top/blog/github-pages如何去掉子域名</link>
            <guid>github-pages如何去掉子域名</guid>
            <pubDate>Sat, 07 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[使用github新建仓库通过github pages发布后，url必须携带仓库名才能访问否则404。]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="背景">背景<a class="hash-link" href="#背景" title="Direct link to heading">​</a></h2><p>使用github新建仓库通过github pages发布后，url必须携带仓库名才能访问否则404。<img loading="lazy" alt="image-20230107203033124" src="/assets/images/20230107-01-3492e204e2bc084fcb226082aaf4793d.png" width="833" height="114" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决办法">解决办法<a class="hash-link" href="#解决办法" title="Direct link to heading">​</a></h2><p>修改仓库名为<code>&lt;username&gt;.github.io</code></p><p>调整发布的分支为<code>master</code>（不确定是否需要该操作）</p><p>参考： <a href="https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages#types-of-github-pages-sites" target="_blank" rel="noopener noreferrer">GitHub Pages 站点的类型</a></p>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>github</category>
        </item>
        <item>
            <title><![CDATA[JSON.stringify保留原有格式]]></title>
            <link>http://machu.top/blog/JSON.stringify保留原有格式</link>
            <guid>JSON.stringify保留原有格式</guid>
            <pubDate>Tue, 03 Jan 2023 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token known-class-name class-name">JSON</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">stringify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token known-class-name class-name">Object</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">keys</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">sort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>java</category>
            <category>js</category>
        </item>
        <item>
            <title><![CDATA[nginx反向代理]]></title>
            <link>http://machu.top/blog/nginx反向代理</link>
            <guid>nginx反向代理</guid>
            <pubDate>Tue, 03 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[路由转发]]></description>
            <content:encoded><![CDATA[<p>路由转发</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">location / {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    proxy_pass http://127.0.0.1:8001; # 反向代理到 8001 端口</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    add_header Access-Control-Allow-Origin *;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>java</category>
            <category>nginx</category>
        </item>
        <item>
            <title><![CDATA[报错only_full_group_by的解决办法]]></title>
            <link>http://machu.top/blog/报错only_full_group_by的解决办法</link>
            <guid>/报错only_full_group_by的解决办法</guid>
            <pubDate>Tue, 03 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[报错only_full_group_by的解决办法]]></description>
            <content:encoded><![CDATA[<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> @</span><span class="token variable" style="color:#36acaa">@global.sql_mode</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">set</span><span class="token plain"> @</span><span class="token variable" style="color:#36acaa">@global.sql_mode</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>java</category>
            <category>mysql</category>
        </item>
        <item>
            <title><![CDATA[解决jsencrypt加密长文本时解密失败]]></title>
            <link>http://machu.top/blog/解决jsencrypt加密长文本时解密失败</link>
            <guid>/解决jsencrypt加密长文本时解密失败</guid>
            <pubDate>Tue, 03 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[解决jsencrypt加密长文本时解密失败]]></description>
            <content:encoded><![CDATA[<p>将下列代码拷贝至jsencrypt.js中，在JSEncrypt.version = "3.1.4";前面加入</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">//任意长度RSA Key分段加密解密长字符串</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//获取RSA key 长度</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token class-name">JSEncrypt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method-variable function-variable method function property-access" style="color:#d73a49">getkeylength</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">key</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">n</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bitLength</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 分段解密，支持中文</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token class-name">JSEncrypt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method-variable function-variable method function property-access" style="color:#d73a49">decryptUnicodeLong</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> k </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">//解密长度=key size.hex2b64结果是每字节每两字符，所以直接*2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> maxLength </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">k</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">n</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bitLength</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">*</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> hexString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">b64tohex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> decryptedString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> rexStr</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">".{1,"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> maxLength  </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"}"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> rex </span><span class="token operator" style="color:#393A34">=</span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">RegExp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rexStr</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'g'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> subStrArray </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> hexString</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">match</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rex</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">subStrArray</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                subStrArray</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">entry</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    decryptedString </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">decrypt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">entry</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> decryptedString</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 分段加密，支持中文</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token class-name">JSEncrypt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">prototype</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method-variable function-variable method function property-access" style="color:#d73a49">encryptUnicodeLong</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> k </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">//根据key所能编码的最大长度来定分段长度。key size - 11：11字节随机padding使每次加密结果都不同。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> maxLength </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">k</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">n</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bitLength</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> subStr</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> encryptedString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> subStart </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> subEnd</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> bitLen</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tmpPoint</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> len </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> len</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">//js 是使用 Unicode 编码的，每个字符所占用的字节数不同</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> charCode </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> string</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">charCodeAt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">charCode </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x007f</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    bitLen </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">charCode </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0x07ff</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    bitLen </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">charCode </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0xffff</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    bitLen </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    bitLen </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">//字节数到达上限，获取子字符串加密并追加到总字符串后。更新下一个字符串起始位置及字节计算。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bitLen</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain">maxLength</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    subStr</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">string</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">subStart</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">subEnd</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    encryptedString </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">encrypt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">subStr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    subStart</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">subEnd</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    bitLen</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">bitLen</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">tmpPoint</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    subEnd</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    tmpPoint</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">bitLen</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            subStr</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">string</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">subStart</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">len</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            encryptedString </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">encrypt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">subStr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">hex2b64</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">encryptedString</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ex</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//添加的函数与方法结束</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>java</category>
            <category>js</category>
        </item>
        <item>
            <title><![CDATA[常用上标下标符号大全]]></title>
            <link>http://machu.top/blog/常用上标下标符号大全</link>
            <guid>常用上标下标符号大全</guid>
            <pubDate>Mon, 02 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[常用上标 ⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁼ ⁽ ⁾ ⁿ º ˙]]></description>
            <content:encoded><![CDATA[<p>常用上标 ⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁼ ⁽ ⁾ ⁿ º ˙</p><p>常用下标₀ ₁ ₂ ₃ ₄ ₅ ₆ ₇ ₈ ₉ ₊ ₋ ₌ ₍ ₎ ₐ ₑ ₒ ₓ ₔ ₕ ₖ ₗ ₘ ₙ ₚ ₛ ₜ</p><p>更多上标 ᵃ ᵇ ᶜ ᵈ ᵉ ᵍ ʰ ⁱ ʲ ᵏ ˡ ᵐ ⁿ ᵒ ᵖ ᵒ⃒ ʳ ˢ ᵗ ᵘ ᵛ ʷ ˣ ʸ ᙆ ᴬ ᴮ ᒼ ᴰ ᴱ ᴳ ᴴ ᴵ ᴶ ᴷ ᴸ ᴹ ᴺ ᴼ ᴾ ᴼ̴ ᴿ ˢ ᵀ ᵁ ᵂ ˣ ᵞ ᙆ ꝰ ˀ ˁ ˤ ꟸ ꭜ ʱ ꭝ ꭞ ʴ ʵ ʶ ꭟ ˠ ꟹ ᴭ ᴯ ᴲ ᴻ ᴽ ᵄ ᵅ ᵆ ᵊ ᵋ ᵌ ᵑ ᵓ ᵚ ᵝ ᵞ ᵟ ᵠ ᵡ ᵎ ᵔ ᵕ ᵙ ᵜ ᶛ ᶜ ᶝ ᶞ ᶟ ᶡ ᶣ ᶤ ᶥ ᶦ ᶧ ᶨ ᶩ ᶪ ᶫ ᶬ ᶭ ᶮ ᶯ ᶰ ᶱ ᶲ ᶳ ᶴ ᶵ ᶶ ᶷ ᶸ ᶹ ᶺ ᶼ ᶽ ᶾ ᶿ ꚜ ꚝ ჼ ᒃ ᕻ ᑦ ᒄ ᕪ ᑋ ᑊ ᔿ ᐢ ᣕ ᐤ ᣖ ᣴ ᣗ ᔆ ᙚ ᐡ ᘁ ᐜ ᕽ ᙆ ᙇ ᒼ ᣳ ᒢ ᒻ ᔿ ᐤ ᣖ ᣵ ᙚ ᐪ ᓑ ᘁ ᐜ ᕽ ᙆ ᙇ ⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁼ ˂ ˃ ⁽ ⁾ ˙ * º</p><p>更多下标 ₐ ₔ ₑ ₕ ᵢ ⱼ ₖ ₗ ₘ ₙ ₒ ₚ ᵣ ₛ ₜ ᵤ ᵥ ₓ ᙮ ᵤ ᵩ ᵦ ₗ ˪ ៳ ៷ ₒ ᵨ ₛ ៴ ᵤ ᵪ ᵧ</p><p>中文上标 ㆒㆓㆔㆕㆖㆗㆘㆙㆚㆛㆜㆝㆞㆟</p><p>特殊字符 ：
、。·ˉˇ¨〃々—～‖…‘’“”〔〕〈〉《》「」『』〖〗【】±×÷∶∧∨∑∏∪∩∈∷√⊥∥∠⌒⊙∫∮≡≌≈∽∝≠≮≯≤≥∞∵∴♂♀°′″℃＄¤￠￡‰§№☆★○●◎◇◆□■△▲※→←↑↓〓〡〢〣〤〥〦〧〨〩㊣㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕︰￢￤℡ˊˋ˙–―‥‵℅℉↖↗↘↙∕∟∣≒≦≧⊿═║╒╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡╢╣╤╥╦╧╨╩╪╫╬╭╮╯╰╱╲╳▁▂▃▄▅▆▇�█▉▊▋▌▍▎▏▓▔▕▼▽◢◣◤◥☉⊕〒〝〞</p><p>罗马字符：
ⅰ ⅱ ⅲ ⅳ ⅴⅵ  ⅶ  ⅷ ⅸⅹ
Ⅰ Ⅱ Ⅲ  Ⅳ  Ⅴ Ⅵ Ⅶ Ⅷ Ⅸ Ⅹ Ⅺ Ⅻ</p><p>数字字符：⒈⒉⒊⒋⒌⒍⒎⒏⒐⒑⒒⒓⒔⒕⒖⒗⒘⒙⒚⒛⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇①②③④⑤⑥⑦⑧⑨⑩㈠㈡㈢㈣㈤㈥㈦㈧㈨㈩</p><p>拼音字符：
āáǎàēéěèīíǐìōóǒòūúǔùǖǘǚǜü</p><p>希腊字母
ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρστυφχψω</p>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>工具，下标</category>
        </item>
        <item>
            <title><![CDATA[选中div内文本复制后会多一个换行符]]></title>
            <link>http://machu.top/blog/选中div内文本复制后会多一个换行符</link>
            <guid>选中div内文本复制后会多一个换行符</guid>
            <pubDate>Mon, 02 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[代码如下]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="代码如下">代码如下<a class="hash-link" href="#代码如下" title="Direct link to heading">​</a></h2><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> copyToken </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token dom variable" style="color:#36acaa">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getElementById</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'token-text'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">copyToken</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">innerHTML</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> range </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token dom variable" style="color:#36acaa">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">createRange</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    range</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">selectNodeContents</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">copyToken</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token dom variable" style="color:#36acaa">window</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getSelection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">removeAllRanges</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token dom variable" style="color:#36acaa">window</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getSelection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">addRange</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">range</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> tag </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token dom variable" style="color:#36acaa">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">execCommand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'copy'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tag</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">success</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'复制成功!'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>注意上方的<code>range.selectNodeContents()</code></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="selectnodecontents">selectNodeContents<a class="hash-link" href="#selectnodecontents" title="Direct link to heading">​</a></h2><p>selectNodeContents() 方法把范围边界设置为一个节点的子节点。</p><p>选中内容</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="selectnode">selectNode<a class="hash-link" href="#selectnode" title="Direct link to heading">​</a></h2><p>selectNode() 方法把范围边界设置为一个节点。</p><p>选中节点</p>]]></content:encoded>
            <author>heshibina@gmail.com (Ma Chu)</author>
            <category>js</category>
        </item>
    </channel>
</rss>